# -----------------------------------
# ----- Primary tmux.conf file -----
# -----------------------------------

# If you're using .config/tmux instead of ~, you need to make sure that this
# file is NOT hidden.

# Note: example tmux config can be found at /usr/share/doc/tmux/examples

bind S source-file ~/.config/tmux/tmux.conf \; display "reloaded tmux.conf! :)"

# neovim takes forever to respond to escape unless you have this setting
# note: this must be at least 50 (default is 500). i would like 0, but it will
# produce a bunch of 0;10;10 garbage on startup if below 50.
set -g escape-time 50

# Get fancy colors !!!!!!!!!!!!!!!!!!!!
set -g default-terminal "tmux-256color"

# Use custom prefix key
# Note: you can set "prefix2" to have a second prefix key
set -g prefix C-space

# Windows and panes should start numbering at 1, not 0
set -g base-index 1

# When you close an intermediate window, shift all the right windows leftward.
set -g renumber-windows on

# display messages for more than like 2ms like bro why are they so short
set -g display-time 3000

# how many seconds between status line updates?
set -g status-interval 1

# Act like vim within a buffer
# (this makes the <prefix>? and <prefix>[ menus navigable via jk)
setw -g mode-keys vi

# When opening a new window, open that window in the current window's directory
bind c new-window -c "#{pane_current_path}"
bind C-c neww -c "#{pane_current_path}"

# Mnemonic split keybindings (also open those splits in the current directory)
bind | split-window -h -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"

# Swap windows (not to be confused with swapping panes)
bind -r < swap-window -d -t -1
bind -r > swap-window -d -t +1

# Switch to most recent window
bind Tab last-window
bind C-Space last-window

# Move between panes like like vim
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind C-h select-pane -L
bind C-j select-pane -D
bind C-k select-pane -U
bind C-l select-pane -R


# ----- üåà color stuff üòÅ -----

# adapted from https://cassidy.codes/blog/2019-08-03-tmux-colour-theme/
# note: '-g' will set the property, '-ga' will append onto existing property

# pane border
set -g pane-border-style fg='#5ec2b7'
set -g pane-active-border-style fg='#c0fdfb'

# message text (for when you're on the <prefix>: screen)
set -g message-style bg='#5ec2b7',fg='#000000'

# status line (you know, the main thing at the bottom)
set-option -g status-justify "centre"
set -g status-style bg='#5ec2b7',fg='#000000'

# status left
# thingy that lights up when prefix is pressed
set -g status-left '#{?client_prefix,#[bg=#c0fdfb],} üëÄ '

# window status
set-window-option -g window-status-current-style fg='#000000',bg='#c0fdfb'

# window status
set -g window-status-current-format '#[bg=#AA0000,fg=00AA00] #I #W '
set -g window-status-format " #I #W "

# status right
set-window-option -g status-right-style bg='#c0fdfb',fg='#000000'
# zoom indicator
set -g status-right '#{?window_zoomed_flag, ‚Üï,}'
set -ga status-right ' %a %d '

# color testing
# set -ga status-right '#[bg=#4d3e50] 0 ' # darker grey
# set -ga status-right '#[bg=#705d70] 1 ' # lighter grey
# set -ga status-right '#[bg=#5ec2b7] 2 ' # darker mint
# set -ga status-right '#[bg=#c0fdfb] 3 ' # lighter mint

# format specifiers that you can use
#H: Hostname of the local host
#F: Active pane's current path (file path)
#S: Current session name
#I: Current window index (0-based)
#P: Current pane index (0-based)
#D: Current date (e.g., "Day Month Date")
#T: Current time (e.g., "HH:MM:SS")
#W: Current window name
#F: Active pane's current path (file path)
#P: Current pane index (0-based)
#L: Current window's last activity (inactivity time)
#M: Current window's marked status
#V: Tmux version
#[$(shell command)]: Execute a shell command and insert its output
